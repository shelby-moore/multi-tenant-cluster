---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.name }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.name }}
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{ .Values.name }}
    spec:
      {{- if kindIs "map" .Values.nodeGroup }}
      nodeSelector:
        {{ .Values.nodeGroup.name }}: "true"
      tolerations:
        - key: "reserved"
          operator: "Equal"
          value: "{{ .Values.nodeGroup.name }}"
          effect: "NoSchedule"
      {{- end }}
      serviceAccountName: {{ .Values.name }}
      containers:
      - env:
        - name: PORT
          value: "8080"
        image: nginx:stable
        imagePullPolicy: IfNotPresent
        name: {{ .Values.name }}
        ports:
        - containerPort: 80
          protocol: TCP
        resources:
          requests:
            cpu: 50m
            memory: 50Mi
          limits:
            cpu: 100m
            memory: 100Mi
