{{- if kindIs "map" .Values.nodeGroup }}
# TODO make the capacity type, instance type, etc configurable
---
apiVersion: karpenter.sh/v1alpha5
kind: Provisioner
metadata:
  name: {{ .Values.nodeGroup.name }}
spec:
  startupTaints:
    - key: node.cilium.io/agent-not-ready
      value: "true"
      effect: NoExecute
  taints:
    - key: reserved
      value: {{ .Values.nodeGroup.name }}
      effect: NoExecute
  requirements:
    - key: karpenter.sh/capacity-type
      operator: In
      values: ["on-demand"]
    - key: kubernetes.io/os
      operator: In
      values:
        - linux
    - key: kubernetes.io/arch
      operator: In
      values:
        - amd64
    - key: karpenter.k8s.aws/instance-category
      operator: In
      values:
        - m
    - key: karpenter.k8s.aws/instance-generation
      operator: Gt
      values:
        - '2'
    - key: {{ .Values.nodeGroup.name }}
      operator: Exists
  limits:
    resources:
      cpu: 1k
  providerRef:
    name: {{ .Values.nodeGroup.name }}
  consolidation:
    enabled: true

# TODO make the subnet/security group configurable
---
apiVersion: karpenter.k8s.aws/v1alpha1
kind: AWSNodeTemplate
metadata:
  name: {{ .Values.nodeGroup.name }}
spec:
  amiFamily: Bottlerocket
  subnetSelector:
    karpenter.sh/discovery: "eks-blueprint"
  securityGroupSelector:
    karpenter.sh/discovery: "eks-blueprint"
{{- end }}
